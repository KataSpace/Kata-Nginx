<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="f1793371-fa99-4e0f-ba3c-e7f92ab16e08" name="更改" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Dockerfile" beforeDir="false" afterPath="$PROJECT_DIR$/Dockerfile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/Makefile" beforeDir="false" afterPath="$PROJECT_DIR$/Makefile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/apis/interface.go" beforeDir="false" afterPath="$PROJECT_DIR$/apis/interface.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cli/kn/main.go" beforeDir="false" afterPath="$PROJECT_DIR$/cli/kn/main.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/config/web.go" beforeDir="false" afterPath="$PROJECT_DIR$/config/web.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/engine/engine.go" beforeDir="false" afterPath="$PROJECT_DIR$/engine/engine.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/engine/engine_test.go" beforeDir="false" afterPath="$PROJECT_DIR$/engine/engine_test.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/engine/init.go" beforeDir="false" afterPath="$PROJECT_DIR$/engine/init.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/services/v1/web.go" beforeDir="false" afterPath="$PROJECT_DIR$/services/v1/web.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/tools/nginx.go" beforeDir="false" afterPath="$PROJECT_DIR$/tools/nginx.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go Application" />
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file:///usr/local/opt/go/libexec" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitSEFilterConfiguration">
    <file-type-list>
      <filtered-out-file-type name="LOCAL_BRANCH" />
      <filtered-out-file-type name="REMOTE_BRANCH" />
      <filtered-out-file-type name="TAG" />
      <filtered-out-file-type name="COMMIT_BY_MESSAGE" />
    </file-type-list>
  </component>
  <component name="GoLibraries">
    <option name="indexEntireGoPath" value="false" />
  </component>
  <component name="ProjectId" id="1yFZgEJt41iUWs0CYa6ycGbDtDw" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
    <option name="showMembers" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="DefaultGoTemplateProperty" value="Go File" />
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="go.formatter.settings.were.checked" value="true" />
    <property name="go.import.settings.migrated" value="true" />
    <property name="go.modules.go.list.on.any.changes.was.set" value="true" />
    <property name="go.sdk.automatically.set" value="true" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/doc/pics" />
    <property name="node.js.detected.package.eslint" value="true" />
    <property name="node.js.detected.package.tslint" value="true" />
    <property name="node.js.selected.package.eslint" value="(autodetect)" />
    <property name="node.js.selected.package.tslint" value="(autodetect)" />
    <property name="nodejs_interpreter_path.stuck_in_default_project" value="undefined stuck path" />
    <property name="nodejs_npm_path_reset_for_default_project" value="true" />
    <property name="settings.editor.selected.configurable" value="copyright.profiles" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/doc/pics" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$" />
      <recent name="$PROJECT_DIR$/services" />
      <recent name="$PROJECT_DIR$/apis" />
      <recent name="$PROJECT_DIR$/apis/nginx" />
    </key>
  </component>
  <component name="RunManager" selected="Makefile 目标.kn-alpine">
    <configuration default="true" type="GoApplicationRunConfiguration" factoryName="Go Application">
      <module name="Kata-Nginx" />
      <working_directory value="$PROJECT_DIR$" />
      <go_parameters value="-i" />
      <kind value="FILE" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <method v="2" />
    </configuration>
    <configuration default="true" type="GoTestRunConfiguration" factoryName="Go Test">
      <module name="Kata-Nginx" />
      <working_directory value="$PROJECT_DIR$" />
      <go_parameters value="-i" />
      <kind value="DIRECTORY" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <configuration name="github.com/KataSpace/Kata-Nginx/engine 中的 Test_parseNginxCommand" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="Kata-Nginx" />
      <working_directory value="$PROJECT_DIR$/engine" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/KataSpace/Kata-Nginx/engine" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTest_parseNginxCommand\E$" />
      <method v="2" />
    </configuration>
    <configuration name="github.com/KataSpace/Kata-Nginx/engine 中的 Test_parseNginxCommand/Normal_Test" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="Kata-Nginx" />
      <working_directory value="$PROJECT_DIR$/engine" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/KataSpace/Kata-Nginx/engine" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTest_parseNginxCommand\E$/^\QNormal_Test\E$" />
      <method v="2" />
    </configuration>
    <configuration name="go test github.com/KataSpace/Kata-Nginx/engine" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="Kata-Nginx" />
      <working_directory value="$PROJECT_DIR$/engine" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/KataSpace/Kata-Nginx/engine" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <method v="2" />
    </configuration>
    <configuration name="kn-alpine" type="MAKEFILE_TARGET_RUN_CONFIGURATION" factoryName="Makefile" temporary="true">
      <makefile filename="$PROJECT_DIR$/Makefile" target="kn-alpine" workingDirectory="" arguments="">
        <envs />
      </makefile>
      <method v="2" />
    </configuration>
    <configuration name="kn" type="MAKEFILE_TARGET_RUN_CONFIGURATION" factoryName="Makefile" temporary="true">
      <makefile filename="$PROJECT_DIR$/Makefile" target="kn" workingDirectory="" arguments="">
        <envs />
      </makefile>
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Makefile 目标.kn-alpine" />
        <item itemvalue="Makefile 目标.kn" />
        <item itemvalue="Go 测试.go test github.com/KataSpace/Kata-Nginx/engine" />
        <item itemvalue="Go 测试.github.com/KataSpace/Kata-Nginx/engine 中的 Test_parseNginxCommand" />
        <item itemvalue="Go 测试.github.com/KataSpace/Kata-Nginx/engine 中的 Test_parseNginxCommand/Normal_Test" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="应用程序级" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="VgoProject">
    <integration-enabled>true</integration-enabled>
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/tools/nginx.go</url>
          <line>178</line>
          <option name="timeStamp" value="5" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/tools/nginx.go</url>
          <line>174</line>
          <option name="timeStamp" value="10" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/tools/nginx.go</url>
          <line>163</line>
          <option name="timeStamp" value="11" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/tools/nginx.go</url>
          <line>167</line>
          <option name="timeStamp" value="12" />
        </line-breakpoint>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/engine/engine.go</url>
          <line>343</line>
          <option name="timeStamp" value="13" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
  <component name="com.intellij.coverage.CoverageDataManagerImpl">
    <SUITE FILE_PATH="coverage/Kata_Nginx$github_com_KataSpace_Kata_Nginx_engine__Test_parseNginxCommand.out" NAME="github.com/KataSpace/Kata-Nginx/engine 中的 Test_parseNginxCommand 覆盖结果" MODIFIED="1631971901160" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
    <SUITE FILE_PATH="coverage/Kata_Nginx$go_test_github_com_KataSpace_Kata_Nginx_engine.out" NAME="go test github.com/KataSpace/Kata-Nginx/engine 覆盖结果" MODIFIED="1631971942225" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="GoCoverage" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="false" />
  </component>
</project>